◇データ構造体全体の実装としては動的なものを採用する今回は。(というかたぶんそっちの方が多いと思われるので)：



◇ページ、スロット、セル数の容量の決定仕様
・どのようにして領域のプールの最大値を決定するか
→利用可能なメモリ容量を上限としての制約条件として、それに加えて、要件を満たすためのページ数やスロット、セル数を決定する

◇異なるモジュールで、ノードを構築する個別のインスタンス間で通信を制限することにより外部通信からのポート介しての攻撃は防ぐことができると思われるが、コンテナを利用することにより、親プロセスとの通信時におけるセキュリティ強度を高くする(通信の際に連絡するノード数が増増えるため；ハッシュ値のソルト付きイテレーションと一緒)
→
＋コンテナに格納することにより、デーモンで各コンテナの制御をすることで、
メモリやCPU等のリソースの割り当てをより柔軟に制御する、コンテナ間の通信時のセキュリティ強度を高めるためのメタデータを付与することができる、レイテンシの問題でどの程度アーキテクチャに複雑性を持たせるかは問題になるが、アーキテクチャに複雑性を持たせたり、セキュリティ的冗長性を実現するノードをネットワーク内に追加することによりセキュリティ的により強固にし、また、システム間の通信や保守性が高まる
、また、ノード分割の境界をより明確にすることにより、また、その各コンテナを制御するそしてその権限が高いデーモンを挟むことにより
