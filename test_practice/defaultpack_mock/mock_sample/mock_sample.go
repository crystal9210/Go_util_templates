// Code generated by MockGen. DO NOT EDIT.
// Source: sample.go

// Package mock_sample is a generated GoMock package.
package mock_sample

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mockwriter is a mock of writer interface.
type Mockwriter struct {
	ctrl     *gomock.Controller
	recorder *MockwriterMockRecorder
}

// MockwriterMockRecorder is the mock recorder for Mockwriter.
type MockwriterMockRecorder struct {
	mock *Mockwriter
}

// NewMockwriter creates a new mock instance.
func NewMockwriter(ctrl *gomock.Controller) *Mockwriter {
	mock := &Mockwriter{ctrl: ctrl}
	mock.recorder = &MockwriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockwriter) EXPECT() *MockwriterMockRecorder {
	return m.recorder
}

// Write mocks base method.
// これはインターフェースが機能するか同課のテスト用モックなので内部でモック自体の関数を呼び出しておっけー；test_practice内のmockディレクトリの方のモックのコメントに詳しく書いてあるはず
func (m *Mockwriter) Write(arg0 []byte) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Write indicates an expected call of Write.
func (mr *MockwriterMockRecorder) Write(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*Mockwriter)(nil).Write), arg0)
}
