☆chan chan型：チャネルのチャネル。チャネルを通じて他のチャネルを送受信することを意味→このパターンは動的なワーカープールやイベントのディスパッチ処理など複雑な非同期プログラミングのシナリオでよく使用される

〇ワーカープールパターンにおけるディスパッチャー：仕事(ジョブ)を受け取り、それを実行するためのワーカーに割り当てる役割を持つコンポーネント
→
ディスパッチャー：効率的にタスクを分配し、リソースを最適に活用する
☆どういうときこの設計パターンが採用されるか→
多数の独立したタスクがある場合や、サーバーが多くのクライアントリクエストを処理する必要がある場合


